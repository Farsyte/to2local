use { Vessel } from ksp::vessel
use { CONSOLE } from ksp::console

use { Scheduler } from fx::scheduler

pub type float = float

pub type SeqTask = fn() -> float

pub struct Sequencer(vessel: Vessel) {
    scheduler: Scheduler = Scheduler(vessel)

    next: NodeRef = no_node
    last: NodeRef = no_node
    step: int = 0
}

type NodeRef = Option<Node>

struct Node(task: SeqTask) {
    next: NodeRef = no_node
    task: SeqTask = task
}

// oddity in KnotrolSystem2 0.2.2.0
// this initializer was not working:
//    next: NodeRef = None()
const no_node : NodeRef = None()

impl Sequencer {

    fn add(self, task: SeqTask) -> Unit = {
        const nref : NodeRef = Some(Node(task))
        const last : NodeRef = self.last
        if (!self.next.defined)
            self.next = nref
        if (self.last.defined)
            self.last.value.next = nref
        self.last = nref
    }

    fn step(self) -> float = {
        if (self.next.defined) {
            let n = self.next.value
            let r = n.task()
            if (r <= 0.0) {
                self.next = n.next
            }
        }
        if (self.next.defined) {
            0.01
        } else {
            0.0
        }
    }
}