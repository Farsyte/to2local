use { CONSOLE } from ksp::console
use { current_time } from ksp::game
use { MODE_STABILITYASSIST } from ksp::vessel

use { Common } from fx::common

pub struct Launch(common: Common) {
    common : Common = common
    mode : int = 0
    mode_met : float = 0.0
}
impl Launch {

    sync fn launchtime(self) -> bool = {
        const common = self.common

        // Open for expansion:
        //
        // When initating support for missions that constrain the
        // launch window (such as waiting until we are within the
        // orbital plane of a destination), add code here to examine
        // data in common to guide selection of launch time.
        //
        // Absent any constraints, launch in 3 seconds.

        common.t0 = current_time() + 3.0

        false
    }

    sync fn countdown(self) -> bool = {
        const common = self.common
        if (self.mode != 1) {
            self.mode = 1
            self.mode_met = common.met()
            CONSOLE.print_line("start countdown")
        }
        current_time() < common.t0
    }

    sync fn liftoff(self) -> bool = {
        const common = self.common
        const vessel = common.vessel
        if (self.mode != 2) {
            self.mode = 2
            self.mode_met = common.met()
            common.t_mgr.throttle = 1.0
            vessel.autopilot.enabled = true
            vessel.autopilot.mode = MODE_STABILITYASSIST
            CONSOLE.print_line("start liftoff")
        }
        common.met() < 5.0
    }
}