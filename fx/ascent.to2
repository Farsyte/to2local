use { CONSOLE } from ksp::console
use { MODE_AUTOPILOT, MODE_PROGRADE } from ksp::vessel
use { min, max, sqrt } from core::math

use { Common } from fx::common

pub struct Ascent(common: Common) {
    common : Common = common

    mode : int = 0
    mode_met : float = 0.0

    alt_min : float = 0.0
    alt_max : float = 70000.0
}

impl Ascent {

    sync fn gravityturn(self) -> float = {
        const common = self.common
        const vessel = common.vessel
        const orbit = vessel.orbit

        const des_ap = common.launch_altitude
        const obs_ap = orbit.apoapsis.value

        if (obs_ap > des_ap) {
            common.t_mgr.throttle = 0.0
            vessel.autopilot.enabled = true
            vessel.autopilot.mode = MODE_PROGRADE
            return 0.0
        }

        if (self.mode != 3) {
            self.mode = 3
            self.mode_met = common.met()

            CONSOLE.print_line("starting gravity turn")

            self.alt_min = vessel.altitude_sealevel
            self.alt_max = max(vessel.main_body.atmosphere_depth, self.alt_min + 1000)

            common.t_mgr.throttle = 1.0
            vessel.autopilot.enabled = true
            vessel.autopilot.mode = MODE_AUTOPILOT
        }

        const atm_frac = (vessel.altitude_sealevel - self.alt_min) / (self.alt_max - self.alt_min)
        const atm_clip = max(0, min(1, atm_frac))
        const atm_sqrt = sqrt(atm_clip)
        const pit_frac = 1.0 - atm_sqrt

        const pitch = 90.0 * pit_frac

        const heading = common.launch_azimuth
        const direction = vessel.heading_direction(heading, pitch, 0)

        vessel.autopilot.target_orientation = direction.vector

        // this step needs to execute frequently enough
        // to make our target_orientation rotate smoothly.
        0.01
    }

    sync fn spacecoast(self) -> float = {
        const common = self.common
        const vessel = common.vessel

        if (self.mode != 4) {
            self.mode = 4
            self.mode_met = common.met()

            CONSOLE.print_line("coasting to space")

            common.t_mgr.throttle = 0.0
            vessel.autopilot.enabled = true
            vessel.autopilot.mode = MODE_PROGRADE
        }

        const atm_depth = vessel.main_body.atmosphere_depth
        const vessel_alt = vessel.altitude_sealevel
        if (vessel_alt <= atm_depth) {
            0.1
        } else {
            0.0
        }
    }

}